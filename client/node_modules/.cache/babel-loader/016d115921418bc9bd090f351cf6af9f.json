{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst getWindowDimensions = () => {\n  const {\n    innerWidth: width,\n    innerHeight: height\n  } = window;\n  return {\n    width,\n    height\n  };\n};\n\nexport const useWindowDimensions = () => {\n  _s();\n\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  const handleResize = () => {\n    setWindowDimensions(getWindowDimensions());\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  return windowDimensions;\n};\n\n_s(useWindowDimensions, \"XalQq70mIWrnM+6Jr3XornfayDc=\");","map":{"version":3,"sources":["/Users/peterekberg/ReactProjekt/projekt1/src/hooks/useWindowDimensions.js"],"names":["useState","useEffect","getWindowDimensions","innerWidth","width","innerHeight","height","window","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;AAEA,MAAMC,mBAAmB,GAAE,MAAI;AAC3B,QAAM;AAACC,IAAAA,UAAU,EAACC,KAAZ;AAAkBC,IAAAA,WAAW,EAACC;AAA9B,MAAsCC,MAA5C;AACA,SAAO;AAACH,IAAAA,KAAD;AAAOE,IAAAA;AAAP,GAAP;AACH,CAHD;;AAKA,OAAO,MAAME,mBAAmB,GAAG,MAAM;AAAA;;AACrC,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAAwCV,QAAQ,CAACE,mBAAmB,EAApB,CAAtD;;AACA,QAAMS,YAAY,GAAC,MAAI;AAACD,IAAAA,mBAAmB,CAACR,mBAAmB,EAApB,CAAnB;AAA2C,GAAnE;;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACVM,IAAAA,MAAM,CAACK,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,WAAO,MAAKJ,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC,CAAZ;AACH,GAHQ,EAGP,EAHO,CAAT;AAIJ,SAAOF,gBAAP;AACC,CATM;;GAAMD,mB","sourcesContent":["import {useState, useEffect} from 'react'\n\nconst getWindowDimensions =()=>{\n    const {innerWidth:width,innerHeight:height}=window\n    return {width,height}\n}\n\nexport const useWindowDimensions = () => {\n    const [windowDimensions, setWindowDimensions]=useState(getWindowDimensions())\n    const handleResize=()=>{setWindowDimensions(getWindowDimensions())}\n\n    useEffect(()=>{\n        window.addEventListener('resize', handleResize)\n        return ()=> window.removeEventListener('resize', handleResize)\n    },[])\nreturn windowDimensions\n}"]},"metadata":{},"sourceType":"module"}